"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/cases/memoryIntro",{

/***/ "./pages/cases/memory/index.tsx":
/*!**************************************!*\
  !*** ./pages/cases/memory/index.tsx ***!
  \**************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ GameGenerator; }\n/* harmony export */ });\n/* harmony import */ var _Users_faurskov_Documents_projekter_undervisning_next_nextjs_blog_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/toConsumableArray */ \"./node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\");\n/* harmony import */ var _Users_faurskov_Documents_projekter_undervisning_next_nextjs_blog_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/slicedToArray */ \"./node_modules/@babel/runtime/helpers/esm/slicedToArray.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_3__);\n/* module decorator */ module = __webpack_require__.hmd(module);\n\n\n\nvar _jsxFileName = \"/Users/faurskov/Documents/projekter/undervisning/next/nextjs-blog/pages/cases/memory/index.tsx\",\n    _this = undefined,\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\n //import './index.css';\n\n/**\n * GameGenerator\n * - GameSession\n * - - Cell\n * - Footer\n * \n/* \n  Denne konstant simulerer ENUM - består af et sæt navngivne værdier kaldet elementer\n  Jeg bruger ENUM for at undgå stavefejl\n*/\n\n\n\nvar GameStatus = {\n  // Før Start-knappen markeres\n  NEW: 'NEW',\n  // Når de celler som skal markeres vises i starten\n  CHALLENGE: 'CHALLENGE',\n  // Selve spillet - aktiveres efter nogle få sekunder\n  PLAYING: 'PLAYING',\n  // Alle celler fundet\n  WON: 'WON',\n  // Tiden er gået eller brugeren har brugt for mange forsøg\n  LOST: 'LOST'\n}; // Disse farver kan udskiftes med hexamaltal - eks.: #FFFFFF\n\nvar CellStatus = {\n  NORMAL: 'white',\n  // Cellen er ikke markeret\n  HIGHLIGHT: 'lightblue',\n  // GameStatus er CHALLENGE og cellen er en Challenge-cell\n  CORRECT: 'lightgreen',\n  // Når brugeren har valgt en celle og cellen er en Challenge-cell\n  WRONG: 'pink' // Når brugeren har valgt en celle, og cellen ikke er en Challenge-cell\n\n};\n/* Beskeder som brugeren får i spillets forskellige faser\n    NEW:         Spillet er netop sat igang (enten via timer eller via knappen)\n    CHALLENGE:   Der går få sekunder hvor brugeren ser de celler hun skal huske\n    PLAYING:     Spillet er igang, og brugeren skal huske hvor challenge-cellerne er (alle hvide)\n    WON:         Brugeren har fundet alle Challenge-cellerne indenfor tiden, og uden for mange forsøg\n    LOST:        Tiden er gået eller brugeren har brugt for mange forsøg\n*/\n\nvar Messages = {\n  NEW: 'You will have a few seconds to memorize the blue random cells',\n  CHALLENGE: 'Remember these blue cells now',\n  PLAYING: 'Which cells were blue?',\n  WON: 'Victory!',\n  LOST: 'Game Over'\n}; // Messages[gameStatus] - sådan får jeg den rette besked i Footer\n\nvar Cell = function Cell(_ref) {\n  var width = _ref.width,\n      gameStatus = _ref.gameStatus,\n      isChallenge = _ref.isChallenge,\n      isPicked = _ref.isPicked,\n      onClick = _ref.onClick;\n  var cellStatus = CellStatus.NORMAL; // Der skal kun ske noget, hvis GameStatus ikke er NEW\n\n  if (gameStatus !== GameStatus.NEW) {\n    if (isPicked) {\n      // Gamestatus er ikke NEW og cellen er valgt\n      // Der testes om cellen er en challenge-cell - returneres CORRECT/WRONG\n      cellStatus = isChallenge ? CellStatus.CORRECT : CellStatus.WRONG;\n    } else if (isChallenge && (gameStatus === GameStatus.CHALLENGE || gameStatus === GameStatus.LOST)) {\n      /*\n        Cellen 'highlightes' hvis cellen er en Challenge-cell, \n        og GameStatus enten er:\n        - CHALLENGE \n          eller \n        - LOST\n      */\n      cellStatus = CellStatus.HIGHLIGHT;\n    }\n  }\n\n  return /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_3__.jsxDEV)(\"div\", {\n    className: \"cell\",\n    style: {\n      width: \"\".concat(width, \"%\"),\n      backgroundColor: cellStatus\n    },\n    onClick: onClick\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, _this);\n};\n\n_c = Cell;\n\nvar Footer = function Footer(_ref2) {\n  var gameStatus = _ref2.gameStatus,\n      countdown = _ref2.countdown,\n      startGame = _ref2.startGame,\n      resetGame = _ref2.resetGame;\n\n  var buttonAreaContent = function buttonAreaContent() {\n    switch (gameStatus) {\n      case GameStatus.NEW:\n        return /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_3__.jsxDEV)(\"button\", {\n          onClick: startGame,\n          children: \"Start Game\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 16\n        }, _this);\n\n      case GameStatus.CHALLENGE:\n        console.log(\"CHALLENGE\"); // falls through\n\n        return \"CHALLENGE\";\n\n      case GameStatus.PLAYING:\n        return countdown + \" secounds\";\n      // case GameStatus.WON:\n      //   console.log(\"WIN\");\n      // falls through\n\n      case GameStatus.LOST:\n        return /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_3__.jsxDEV)(\"button\", {\n          onClick: resetGame,\n          children: \"Play Again\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 16\n        }, _this);\n\n      default:\n        console.log(\"default\");\n        return /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_3__.jsxDEV)(\"button\", {\n          onClick: resetGame,\n          children: \"Play Again\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 18\n        }, _this);\n        ;\n    }\n  };\n\n  return (\n    /*#__PURE__*/\n    // React.Fragment <>\n    (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_3__.jsxDEV)(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_3__.Fragment, {\n      children: [/*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_3__.jsxDEV)(\"div\", {\n        className: \"message\",\n        children: Messages[gameStatus]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 7\n      }, _this), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_3__.jsxDEV)(\"div\", {\n        className: \"button\",\n        children: buttonAreaContent()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 7\n      }, _this)]\n    }, void 0, true)\n  );\n};\n\n_c2 = Footer;\n\nvar GameSession = function GameSession(_ref3) {\n  _s();\n\n  var cellIds = _ref3.cellIds,\n      challengeCellIds = _ref3.challengeCellIds,\n      cellWidth = _ref3.cellWidth,\n      challengeSize = _ref3.challengeSize,\n      challengeSeconds = _ref3.challengeSeconds,\n      playSeconds = _ref3.playSeconds,\n      maxWrongAttempts = _ref3.maxWrongAttempts,\n      autoStart = _ref3.autoStart,\n      resetGame = _ref3.resetGame;\n\n  // useState(GameStatus.PLAYING);\n  // useState(GameStatus.WON);\n  // useState(GameStatus.LOST);\n  var _useState = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(autoStart ? GameStatus.CHALLENGE : GameStatus.NEW),\n      gameStatus = _useState[0],\n      setGameStatus = _useState[1]; // pickedCellIds holder styr på hvilke celler som brugeren har valgt\n  // useState([0, 1, 2, 22, 23, 24]);\n\n\n  var tmpPickedCellIds = [];\n\n  var _useState2 = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(tmpPickedCellIds),\n      pickedCellIds = _useState2[0],\n      setPickedCellIds = _useState2[1]; // countdown holder styr på hvor mange sekunder brugeren har tilbage - starter med playSeconds prop\n\n\n  var _useState3 = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(playSeconds),\n      countdown = _useState3[0],\n      setCountdown = _useState3[1];\n\n  (0,react__WEBPACK_IMPORTED_MODULE_2__.useEffect)(function () {\n    // Brugeren har startet spillet, og kan i tre sekunder se hvor de farvede celler er placeret\n    var timerId;\n\n    if (gameStatus === GameStatus.CHALLENGE) {\n      timerId = setTimeout(function () {\n        return setGameStatus(GameStatus.PLAYING);\n      }, 1000 * challengeSeconds);\n    } // Spillet er i gang, og brugeren har 10 sekunder til at markere de rigtige celler\n\n\n    if (gameStatus === GameStatus.PLAYING) {\n      timerId = setInterval(function () {\n        setCountdown(function (countdown) {\n          if (countdown === 1) {\n            clearTimeout(timerId);\n            setGameStatus(GameStatus.LOST);\n          }\n\n          return countdown - 1;\n        });\n      }, 1000);\n    }\n\n    if (gameStatus === GameStatus.LOST) {\n      console.log(\"Klar til næste spil!\"); // setGameStatus(GameStatus.CHALLENGE);\n    }\n\n    return function () {\n      return clearTimeout(timerId);\n    };\n  }, [challengeSeconds, gameStatus]);\n  (0,react__WEBPACK_IMPORTED_MODULE_2__.useEffect)(function () {\n    var _utils$arrayCrossCoun = utils.arrayCrossCounts(pickedCellIds, challengeCellIds),\n        _utils$arrayCrossCoun2 = (0,_Users_faurskov_Documents_projekter_undervisning_next_nextjs_blog_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_1__.default)(_utils$arrayCrossCoun, 2),\n        correctPicks = _utils$arrayCrossCoun2[0],\n        wrongPicks = _utils$arrayCrossCoun2[1];\n\n    if (correctPicks === challengeSize) {\n      setGameStatus(GameStatus.WON);\n    }\n\n    if (wrongPicks === maxWrongAttempts) {\n      setGameStatus(GameStatus.LOST);\n    }\n  }, [challengeCellIds, challengeSize, maxWrongAttempts, pickedCellIds]);\n  /*\n    - Alle variabler brugt i useEffect() bør inkluderes i ovenstående array, som holder øje med, \n    hvornår useEffect skal opdateres. \n    - jslint holder øje med, om alle relevante variabler er med.\n  */\n\n  var pickCell = function pickCell(cellId) {\n    if (gameStatus === GameStatus.PLAYING) {\n      setPickedCellIds(function (pickedCellIds) {\n        if (pickedCellIds.includes(cellId)) {\n          return pickedCellIds;\n        }\n\n        return [].concat((0,_Users_faurskov_Documents_projekter_undervisning_next_nextjs_blog_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__.default)(pickedCellIds), [cellId]);\n      });\n    }\n  };\n\n  return /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_3__.jsxDEV)(\"div\", {\n    className: \"game\",\n    children: [/*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_3__.jsxDEV)(\"div\", {\n      className: \"grid\",\n      children: cellIds.map(function (cellId) {\n        return /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_3__.jsxDEV)(Cell // unikt ID til hver celle\n        , {\n          // Bredde som afhænger af antal celler i hver række\n          width: cellWidth // Status på spillet \n          ,\n          gameStatus: gameStatus // Er det en challenge cell?  - bruger Array.includes\n          ,\n          isChallenge: challengeCellIds.includes(cellId) // er cellen valgt?           - bruger Array.includes\n          ,\n          isPicked: pickedCellIds.includes(cellId) // Nedarver funktion som tjekker om cellen allerede er valgt - ellers inkluderes den i valgte celler (pickedCellIds)\n          ,\n          onClick: function onClick() {\n            return pickCell(cellId);\n          }\n        }, cellId, false, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 11\n        }, _this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_3__.jsxDEV)(Footer, {\n      gameStatus: gameStatus,\n      countdown: countdown,\n      startGame: function startGame() {\n        return setGameStatus(GameStatus.CHALLENGE);\n      },\n      resetGame: resetGame\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 232,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(GameSession, \"fxA85YgQC6gu6CN39eEEdWcquSM=\");\n\n_c3 = GameSession;\nfunction GameGenerator() {\n  _s2();\n\n  // Placer altid state-elements først!\n  var _useState4 = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(1),\n      gameId = _useState4[0],\n      setGameId = _useState4[1];\n\n  var gridSize = 5;\n  var challengeSize = 6; // Returnerer en array med x-antal elemter 1,2,3...\n  // Fixed Array for hver enkelt spil (skal derfor ikke være i state)\n\n  var cellIds = utils.createArray(gridSize * gridSize);\n  var cellWidth = 100 / gridSize;\n  /*\n    Returnerer en array med tilfældige tal\n    - cellIds er en array med de aktuelle felter\n    - challengeSize bestemmer hvor mange farver, brugeren skal finde\n  */\n\n  var challengeCellIds = utils.sampleArray(cellIds, challengeSize);\n  return /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_3__.jsxDEV)(GameSession, {\n    challengeSize: challengeSize,\n    cellIds: cellIds,\n    cellWidth: cellWidth,\n    challengeCellIds: challengeCellIds,\n    challengeSeconds: 3,\n    playSeconds: 10,\n    maxWrongAttempts: 3,\n    autoStart: gameId > 1,\n    resetGame: function resetGame() {\n      return setGameId(function (gameId) {\n        return gameId + 1;\n      });\n    }\n  }, gameId, false, {\n    fileName: _jsxFileName,\n    lineNumber: 280,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(GameGenerator, \"NdxBUEh67UKnEQOsYqMda/Noysc=\");\n\n_c4 = GameGenerator;\n; // Math science\n\nvar utils = {\n  /* Create an array based on a numeric size property.\n     Example: createArray(5) => [0, 1, 2, 3, 4] */\n  createArray: function createArray(size) {\n    return Array.from({\n      length: size\n    }, function (_, i) {\n      return i;\n    });\n  },\n\n  /* Pick random elements from origArray up to sampleSize\n     And use them to form a new array.\n     Example: sampleArray([9, 12, 4, 7, 5], 3) => [12, 7, 5] */\n  sampleArray: function sampleArray(origArray, sampleSize) {\n    var copy = origArray.slice(0);\n    var sample = [];\n\n    for (var i = 0; i < sampleSize && i < copy.length; i++) {\n      var index = Math.floor(Math.random() * copy.length);\n      sample.push(copy.splice(index, 1)[0]);\n    }\n\n    return sample;\n  },\n\n  /* Given a srcArray and a crossArray, count how many elements \n     in srcArray exist or do not exist in crossArray.\n     Returns an array like [includeCount, excludeCount]\n     Example: arrayCrossCounts([0, 1, 2, 3, 4], [1, 3, 5]) => [2, 3] */\n  arrayCrossCounts: function arrayCrossCounts(srcArray, crossArray) {\n    var includeCount = 0;\n    var excludeCount = 0;\n\n    srcLoop: for (var s = 0; s < srcArray.length; s++) {\n      for (var c = 0; c < crossArray.length; c++) {\n        if (crossArray[c] === srcArray[s]) {\n          includeCount += 1;\n          continue srcLoop;\n        }\n      }\n\n      excludeCount += 1;\n    }\n\n    return [includeCount, excludeCount];\n  }\n}; // ReactDOM.render(\n//   <GameGenerator />,\n//   document.getElementById('root')\n// );\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"Cell\");\n$RefreshReg$(_c2, \"Footer\");\n$RefreshReg$(_c3, \"GameSession\");\n$RefreshReg$(_c4, \"GameGenerator\");\n\n;\n    var _a, _b;\n    // Legacy CSS implementations will `eval` browser code in a Node.js context\n    // to extract CSS. For backwards compatibility, we need to check we're in a\n    // browser context before continuing.\n    if (typeof self !== 'undefined' &&\n        // AMP / No-JS mode does not inject these helpers:\n        '$RefreshHelpers$' in self) {\n        var currentExports = module.__proto__.exports;\n        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n        // This cannot happen in MainTemplate because the exports mismatch between\n        // templating and execution.\n        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n        // A module can be accepted automatically based on its exports, e.g. when\n        // it is a Refresh Boundary.\n        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n            // Save the previous exports on update so we can compare the boundary\n            // signatures.\n            module.hot.dispose(function (data) {\n                data.prevExports = currentExports;\n            });\n            // Unconditionally accept an update to this module, we'll check if it's\n            // still a Refresh Boundary later.\n            module.hot.accept();\n            // This field is set when the previous version of this module was a\n            // Refresh Boundary, letting us know we need to check for invalidation or\n            // enqueue an update.\n            if (prevExports !== null) {\n                // A boundary can become ineligible if its exports are incompatible\n                // with the previous exports.\n                //\n                // For example, if you add/remove/change exports, we'll want to\n                // re-execute the importing modules, and force those components to\n                // re-render. Similarly, if you convert a class component to a\n                // function, we want to invalidate the boundary.\n                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                    module.hot.invalidate();\n                }\n                else {\n                    self.$RefreshHelpers$.scheduleUpdate();\n                }\n            }\n        }\n        else {\n            // Since we just executed the code for the module, it's possible that the\n            // new exports made it ineligible for being a boundary.\n            // We only care about the case when we were _previously_ a boundary,\n            // because we already accepted this update (accidental side effect).\n            var isNoLongerABoundary = prevExports !== null;\n            if (isNoLongerABoundary) {\n                module.hot.invalidate();\n            }\n        }\n    }\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./pages/cases/memory/index.tsx\n");

/***/ })

});